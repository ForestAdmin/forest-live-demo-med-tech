// This model was generated by Forest CLI. However, you remain in control of your models.
// Learn how here: https://docs.forestadmin.com/documentation/reference-guide/models/enrich-your-models
module.exports = (sequelize, DataTypes) => {
  const { Sequelize } = sequelize;
  // This section contains the fields of your model, mapped to your table's columns.
  // Learn more here: https://docs.forestadmin.com/documentation/reference-guide/models/enrich-your-models#declaring-a-new-field-in-a-model
  const Appointments = sequelize.define('appointments', {
    appointmentId: {
      type: DataTypes.INTEGER,
      primaryKey: true,
      defaultValue: Sequelize.literal('nextval(\'appointments_appointment_id_seq\'::regclass)'),
      allowNull: false,
    },
    date: {
      type: DataTypes.DATEONLY,
      allowNull: false,
    },
    time: {
      type: DataTypes.TIME,
      allowNull: false,
    },
    reason: {
      type: DataTypes.STRING,
      allowNull: false,
    },
    patientConfirmed: {
      type: DataTypes.BOOLEAN,
      allowNull: false,
    },
    doctorConfirmed: {
      type: DataTypes.BOOLEAN,
      allowNull: false,
    },
  }, {
    tableName: 'appointments',
    underscored: true,
    timestamps: false,
    schema: process.env.DATABASE_SCHEMA,
  });

  // This section contains the relationships for this model. See: https://docs.forestadmin.com/documentation/reference-guide/relationships#adding-relationships.
  Appointments.associate = (models) => {
    Appointments.belongsTo(models.clinics, {
      foreignKey: {
        name: 'clinicIdKey',
        field: 'clinic_id',
      },
      targetKey: 'clinicId',
      as: 'clinic',
    });
    Appointments.belongsTo(models.doctors, {
      foreignKey: {
        name: 'doctorIdKey',
        field: 'doctor_id',
      },
      targetKey: 'doctorId',
      as: 'doctor',
    });
    Appointments.belongsTo(models.patients, {
      foreignKey: {
        name: 'patientIdKey',
        field: 'patient_id',
      },
      targetKey: 'patientId',
      as: 'patient',
    });
  };

  return Appointments;
};
